// Code generated by protoc-gen-go. DO NOT EDIT.
// source: type_typename.proto

package mservice

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TypeName describes type or name of the object
type TypeName struct {
	// Types that are valid to be assigned to TypeOptional:
	//	*TypeName_Type
	TypeOptional isTypeName_TypeOptional `protobuf_oneof:"type_optional"`
	// Types that are valid to be assigned to NameOptional:
	//	*TypeName_Name
	NameOptional         isTypeName_NameOptional `protobuf_oneof:"name_optional"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TypeName) Reset()         { *m = TypeName{} }
func (m *TypeName) String() string { return proto.CompactTextString(m) }
func (*TypeName) ProtoMessage()    {}
func (*TypeName) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8fbef301afa953d, []int{0}
}

func (m *TypeName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeName.Unmarshal(m, b)
}
func (m *TypeName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeName.Marshal(b, m, deterministic)
}
func (m *TypeName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeName.Merge(m, src)
}
func (m *TypeName) XXX_Size() int {
	return xxx_messageInfo_TypeName.Size(m)
}
func (m *TypeName) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeName.DiscardUnknown(m)
}

var xxx_messageInfo_TypeName proto.InternalMessageInfo

type isTypeName_TypeOptional interface {
	isTypeName_TypeOptional()
}

type TypeName_Type struct {
	Type uint32 `protobuf:"varint,100,opt,name=type,proto3,oneof"`
}

func (*TypeName_Type) isTypeName_TypeOptional() {}

func (m *TypeName) GetTypeOptional() isTypeName_TypeOptional {
	if m != nil {
		return m.TypeOptional
	}
	return nil
}

func (m *TypeName) GetType() uint32 {
	if x, ok := m.GetTypeOptional().(*TypeName_Type); ok {
		return x.Type
	}
	return 0
}

type isTypeName_NameOptional interface {
	isTypeName_NameOptional()
}

type TypeName_Name struct {
	Name string `protobuf:"bytes,200,opt,name=name,proto3,oneof"`
}

func (*TypeName_Name) isTypeName_NameOptional() {}

func (m *TypeName) GetNameOptional() isTypeName_NameOptional {
	if m != nil {
		return m.NameOptional
	}
	return nil
}

func (m *TypeName) GetName() string {
	if x, ok := m.GetNameOptional().(*TypeName_Name); ok {
		return x.Name
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TypeName) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TypeName_Type)(nil),
		(*TypeName_Name)(nil),
	}
}

func init() {
	proto.RegisterType((*TypeName)(nil), "mservice.TypeName")
}

func init() {
	proto.RegisterFile("type_typename.proto", fileDescriptor_c8fbef301afa953d)
}

var fileDescriptor_c8fbef301afa953d = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0xa9, 0x2c, 0x48,
	0x8d, 0x07, 0x11, 0x79, 0x89, 0xb9, 0xa9, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x1c, 0xb9,
	0xc5, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x4a, 0x91, 0x5c, 0x1c, 0x21, 0x95, 0x05, 0xa9, 0x7e,
	0x89, 0xb9, 0xa9, 0x42, 0x22, 0x5c, 0x2c, 0x20, 0x75, 0x12, 0x29, 0x0a, 0x8c, 0x1a, 0xbc, 0x1e,
	0x0c, 0x41, 0x60, 0x9e, 0x90, 0x28, 0x17, 0x0b, 0x48, 0xa7, 0xc4, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0x4e, 0x0f, 0xc6, 0x20, 0x30, 0xd7, 0x89, 0x9f, 0x8b, 0x17, 0x6c, 0x72, 0x7e, 0x41, 0x49, 0x66,
	0x7e, 0x5e, 0x62, 0x0e, 0x48, 0x00, 0x24, 0x01, 0x17, 0x48, 0x62, 0x03, 0xdb, 0x65, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x05, 0x63, 0x77, 0x9f, 0x82, 0x00, 0x00, 0x00,
}
