syntax = "proto3";

package mservice;

import "google/protobuf/timestamp.proto";
import "type_typename.proto";
import "type_header.proto";

enum MetricType {
    METRIC_TYPE_RESERVED    = 0;
    METRIC_TYPE_UNSPECIFIED = 100;
    METRIC_TYPE_CPU         = 200;
    METRIC_TYPE_RAM         = 300;
}

// Metric is one metric tuple (metric identifier [optional], timestamp [optional], description [optional], metric value)
message Metric {
    oneof type_optional {
        // Metric can be classified either by type or by name
        // Identifier can be omitted, in case either both sides understand what they are talking about or
        // identifier is provided in parent's (outer) data type, such as Metric
        MetricType type = 100;
        string     name = 110;
    }

    oneof timestamp_optional {
        // Timestamp is optional
        google.protobuf.Timestamp ts = 200;
    }

    oneof description_optional {
        // Description is optional
        string description = 300;
    }

    oneof value {
        // Value is the purpose of the whole Metric data type, is expected to be present all the time (however,
        // there is an option to omit value), and can be of any type
        string string_value = 400;
        double double_value = 410;
        int32  int32_value  = 420;
        uint32 uint32_value = 430;
        int64  int64_value  = 440;
        uint64 uint64_value = 450;
        bytes  bytes_value  = 460;
    }
}

enum MetricsType {
    // Due to first enum value has to be zero in proto3
    METRICS_TYPE_RESERVED             = 0;
    METRICS_TYPE_UNSPECIFIED          = 100;
    // Resource utilization, such as CPU, RAM, etc
    METRICS_TYPE_RESOURCE_UTILIZATION = 200;
}

// Metrics is a set of Metric tuples
message Metrics {
    Header header = 100;

    // MetricType can be specified once for the whole set of metrics, instead of specifying in each one of them
    TypeName metric_type = 200;

    // Metrics is the purpose of the whole Metrics data type, is expected to be present all the time
    repeated Metric metrics = 300;
}
